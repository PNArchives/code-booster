機能 1: 変数、定数、関数の命名チェックと改善提案
目的: コードの可読性と保守性を高めるために、変数、定数、関数の命名が適切で意味が明確かどうかをチェックし、必要に応じて改善案を提案する。

指示の詳細:

コード内の各変数、定数、関数の名前を分析する。
名前がその機能や役割を適切に表しているかを評価する。
名前が一般的なプログラミング規約に従っているかを確認する（例: キャメルケース、スネークケースなど）。
より適切な名前があれば、その提案をする。
提案する際は、なぜその名前がより適切であるかの理由を説明する。

機能 2: パフォーマンスに影響する可能性のあるコードの改善
目的: パフォーマンスに悪影響を及ぼす可能性のあるコードを特定し、効率的な方法に改善する提案をする。

指示の詳細:

多重ループ、大きなデータ構造の不適切な使用、リソースのclose忘れなどのパフォーマンスに影響する可能性のあるパターンを特定する。
これらの問題を解決するための具体的な改善策を提案する。
改善策を提案する際、なぜそれがパフォーマンス向上に役立つかを説明する。

機能 3: 可読性向上のためのガード文などのアドバイス
目的: コードの可読性を向上させるため、ガード文やその他のリファクタリング手法を提案する。

指示の詳細:

深いネストや複雑な条件文など、可読性を低下させる要因を特定する。
ガード文を使用するなど、コードをより読みやすくするための具体的な改善策を提案する。
提案する際、なぜその改善策が可読性を向上させるかの理由を説明する。
